-- H2 compatível com JPA (Spring Boot)
-- Use BIGINT para id (Java Long) e IDENTITY para autoincremento

DROP TABLE IF EXISTS avaliacoes;
DROP TABLE IF EXISTS produtos;
DROP TABLE IF EXISTS restaurantes;
DROP TABLE IF EXISTS clientes;

-- ========================
-- CLIENTES
-- ========================
CREATE TABLE clientes (
  id                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome              VARCHAR(120) NOT NULL,
  email             VARCHAR(120) NOT NULL,
  telefone          VARCHAR(20),
  endereco          VARCHAR(255),
  data_cadastro     TIMESTAMP,          -- @PrePersist seta CURRENT_TIMESTAMP
  ativo             BOOLEAN NOT NULL,

  CONSTRAINT uk_clientes_email UNIQUE (email)
);

-- ========================
-- RESTAURANTES
-- ========================
CREATE TABLE restaurantes (
  id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome               VARCHAR(120) NOT NULL,
  cnpj               VARCHAR(18)  NOT NULL,
  categoria          VARCHAR(60),
  endereco           VARCHAR(255),
  telefone           VARCHAR(20),
  email              VARCHAR(120),
  latitude           DECIMAL(9,6),
  longitude          DECIMAL(9,6),
  horario_abertura   TIME,
  horario_fechamento TIME,
  estado             VARCHAR(20) NOT NULL,   -- Enum String: ABERTO | FECHADO | MANUTENCAO
  data_cadastro      TIMESTAMP,
  ativo              BOOLEAN NOT NULL,

  CONSTRAINT uk_restaurantes_cnpj  UNIQUE (cnpj),
  CONSTRAINT uk_restaurantes_email UNIQUE (email)
);

-- ========================
-- PRODUTOS
-- ========================
CREATE TABLE produtos (
  id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome            VARCHAR(120) NOT NULL,
  descricao       VARCHAR(255),
  categoria       VARCHAR(20)  NOT NULL,  -- Enum String: BEBIDAS | COMIDAS | SOBREMESAS
  estoque         INT          NOT NULL,
  preco           DECIMAL(10,2) NOT NULL,
  ativo           BOOLEAN      NOT NULL,
  data_cadastro   TIMESTAMP    NOT NULL,
  restaurante_id  BIGINT       NOT NULL,

  CONSTRAINT fk_produtos_restaurante
    FOREIGN KEY (restaurante_id) REFERENCES restaurantes (id)
);

-- (Opcional) Índice para buscar produtos por restaurante com ordenação por nome
CREATE INDEX idx_produtos_restaurante ON produtos (restaurante_id, nome);

-- ========================
-- AVALIAÇÕES
-- ========================
CREATE TABLE avaliacoes (
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  cliente_id       BIGINT      NOT NULL,
  restaurante_id   BIGINT      NOT NULL,
  nota             VARCHAR(20) NOT NULL,   -- Enum String: PESSIMO | RUIM | REGULAR | BOM | OTIMO | EXCELENTE
  comentario       VARCHAR(500),
  data_avaliacao   TIMESTAMP   NOT NULL,

  CONSTRAINT fk_avaliacoes_cliente
    FOREIGN KEY (cliente_id) REFERENCES clientes (id),

  CONSTRAINT fk_avaliacoes_restaurante
    FOREIGN KEY (restaurante_id) REFERENCES restaurantes (id)
);

-- (Opcional) Índices úteis para as consultas do seu Repository
CREATE INDEX idx_avaliacoes_rest ON avaliacoes (restaurante_id, nota);
CREATE INDEX idx_avaliacoes_cli ON avaliacoes (cliente_id);
